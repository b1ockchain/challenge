{"version":3,"sources":["utils/GetWeb3.js","store/Reducer.js","store/InitialState.js","store/Context.js","components/AddRecord.js","components/GetInstitutions.js","components/Admin.js","components/GetRecords.js","components/Header.js","components/RecordVerified.js","components/Verify.js","App.js","index.js"],"names":["GetWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Reducer","state","action","type","msg","payload","success","loading","accounts","contract","records","activeItem","recordVerified","institutions","messageIfHashExist","isAdmin","isApproved","InitialState","undefined","Context","createContext","AddRecord","useContext","dispatch","fileInputRef","useRef","useState","hash","setHash","studentID","setStudentId","studentName","setStudentName","programme","setProgramme","result","setResult","modeOfStudy","setModeOfStudy","handleSubmit","e","preventDefault","methods","isHashExist","call","date_ob","Date","year","getFullYear","month","getMonth","slice","day","getDate","date","addRecord","send","from","getRecords","message","Form","onSubmit","Field","ref","hidden","onChange","file","target","files","reader","FileReader","readAsBinaryString","onloadend","sha256","toString","document","getElementById","innerHTML","name","required","Button","id","content","labelPosition","icon","onClick","current","click","value","GetInstitutions","approve","adr","disapprove","Table","Header","Row","HeaderCell","Body","map","item","Cell","Admin","institution","setInstitution","setName","create","placeholder","GetRecords","filter","r","record","handleItemClick","val","Menu","secondary","Item","position","as","Link","to","active","RecordVerified","Verify","getRecord","getInstitutionIndex","index","data","push","App","useReducer","useEffect","eth","getAccounts","net","getId","networkId","deployedNetwork","Sijil","networks","Contract","abi","address","ministryOfEducation","then","res","getInstitutions","location","pathname","replace","init","on","Provider","Container","path","length","Message","visibel","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e9f81469.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst GetWeb3 = () => {\n  return new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://localhost:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n};\n\nexport default GetWeb3;\n","// CONSTANTS\nconst SET_NOTIF='SET_NOTIF';\nconst SET_LOADING='SET_LOADING';\nconst SET_WEB3='SET_WEB3';\nconst SET_ACCOUNTS='SET_ACCOUNTS';\nconst SET_CONTRACT='SET_CONTRACT';\nconst SET_RECORDS='SET_RECORDS';\nconst SET_ACTIVE_ITEM='SET_ACTIVE_ITEM';\nconst SET_RECORD_VERIFIED='SET_RECORD_VERIFIED';\nconst SET_INSTITUTIONS='SET_INSTITUTIONS';\nconst SET_MESSAGE_HASH_EXIST='SET_MESSAGE_HASH_EXIST';\nconst SET_IS_ADMIN='SET_IS_ADMIN';\nconst SET_IS_APPROVED='SET_IS_APPROVED';\n\n// REDUCER\nconst Reducer = (state, action) => {\n  switch(action.type) {\n    case SET_NOTIF:\n      return {...state,\n        msg: action.payload.msg,\n        success: action.payload.success}\n    case SET_LOADING:\n      return {...state, loading: action.payload}\n    case SET_WEB3:\n      return {...state, web3: action.payload}\n    case SET_ACCOUNTS:\n      return {...state, accounts: action.payload}\n    case SET_CONTRACT:\n      return {...state, contract: action.payload}\n    case SET_RECORDS:\n\t\t\treturn {...state, records: action.payload}\n\t\tcase SET_ACTIVE_ITEM:\n\t\t\treturn {...state, activeItem: action.payload}\n\t\tcase SET_RECORD_VERIFIED:\n\t\t\treturn {...state, recordVerified: action.payload}\n\t\tcase SET_INSTITUTIONS:\n\t\t\treturn {...state, institutions: action.payload}\n\t\tcase SET_MESSAGE_HASH_EXIST:\n\t\t\treturn {...state, messageIfHashExist: action.payload}\n\t\tcase SET_IS_ADMIN:\n\t\t\treturn {...state, isAdmin: action.payload}\n\t\tcase SET_IS_APPROVED:\n\t\t\treturn {...state, isApproved: action.payload}\n\t\tdefault:\n      return state\n  }\n}\n\nexport default Reducer;\n","const InitialState = {\n  msg: undefined,\n  success: undefined,\n  loading: false,\n  web3: undefined,\n  accounts: undefined,\n  contract: undefined,\n\trecords: [],\n\tactiveItem: '',\n\trecordVerified: undefined,\n\tinstitutions: [],\n\tmessageIfHashExist: undefined,\n\tisAdmin: false,\n\tisApproved: false\n}\n\nexport default InitialState;\n","import {createContext} from 'react';\n\nconst Context = createContext({});\n\nexport default Context;\n","import React, {useRef, useState, useContext} from 'react';\nimport Context from '../store/Context';\nimport sha256 from 'crypto-js/sha256';\nimport {Form, Button} from 'semantic-ui-react';\n\nconst AddRecord = () => {\n  const {state, dispatch} = useContext(Context);\n\tconst fileInputRef = useRef();\n  const [hash, setHash] = useState();\n  const [studentID, setStudentId] = useState();\n\tconst [studentName, setStudentName] = useState();\n\tconst [programme, setProgramme] = useState();\n\tconst [result, setResult] = useState();\n\tconst [modeOfStudy, setModeOfStudy] = useState();\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsBinaryString(file);\n    reader.onloadend = () => {\n      setHash(sha256(reader.result).toString());\n    }\n\t\tdocument.getElementById('buttonChooseFile')\n\t\t\t.innerHTML = `<i aria-hidden=\"true\" class=\"file icon\"></i>${file.name}`;\n  }\n\n  const handleStudentIdChange = e => {\n    setStudentId(e.target.value);\n  }\n\n\tconst handleStudentNameChange = e => {\n\t\tsetStudentName(e.target.value);\n\t}\n\n\tconst handleProgrammeChange = e => {\n\t\tsetProgramme(e.target.value);\n\t}\n\n\tconst handleResultChange = e => {\n\t\tsetResult(e.target.value);\n\t}\n\n\tconst handleModeOfStudyChange = e => {\n\t\tsetModeOfStudy(e.target.value);\n\t}\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      dispatch({type: 'SET_LOADING', payload: true});\n\t\t\t// verify is hash exist\n\t\t\tlet isHashExist = await state.contract.methods.isHashExist(hash).call();\n\t\t\tif(!isHashExist) {\n\t\t\t\tlet date_ob = new Date();\n \t\t\t\tlet year = date_ob.getFullYear();\n \t\t\t\tlet month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n \t\t\t\tlet day = (\"0\" + date_ob.getDate()).slice(-2);\n      \tlet date = `${day}-${month}-${year}`;\n\t\t\t\tawait state.contract.methods\n        \t.addRecord(studentID, studentName, programme,\n\t\t\t\t\t\tresult, modeOfStudy, hash, date)\n        \t.send({from: state.accounts[0]});\n      \tdispatch({\n        \ttype: 'SET_NOTIF',\n        \tpayload: {msg: 'record added.', success: true}\n      \t});\n\t\t\t\tconst records = await state.contract.methods\n\t\t\t\t\t.getRecords().call();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_RECORDS',\n\t\t\t\t\tpayload: records\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_MESSAGE_HASH_EXIST', \n\t\t\t\t\tpayload: 'Doc is already exist.'\n\t\t\t\t});\n\t\t\t}\n    } catch (error) {\n      dispatch({\n        type: 'SET_NOTIF',\n        payload: {msg: error.message, success: false}\n      });\n    } finally {\n      dispatch({type: 'SET_LOADING', payload: false});\n    }\n  }\n\n  return (\n\t\t<>\n\t\t{state.messageIfHashExist && <div>{state.messageIfHashExist}</div>}\n\t\t<br/>\n    <Form onSubmit={handleSubmit}>\n      <Form.Field>\n\t\t\t\t<label>File</label>\n        <input\n\t\t\t\t\tref={fileInputRef}\n          type='file'\n          hidden\n          onChange={handleFileChange}\n\t\t\t\t\trequired\n        />\n      \t<Button\n\t\t\t\t\tid='buttonChooseFile'\n          content='Choose File'\n          labelPosition='left'\n          icon='file'\n          onClick={() => fileInputRef.current.click()}\n        />\n\t\t\t</Form.Field>\n\t\t\t<Form.Field>\n      \t<label>Student ID</label>\n      \t<input\n        \ttype='text'\n        \tonChange={handleStudentIdChange}\n        \trequired />\n      </Form.Field>\n\t\t\t<Form.Field>\n      \t<label>Student Name</label>\n      \t<input\n        \ttype='text'\n        \tonChange={handleStudentNameChange}\n        \trequired />\n      </Form.Field>\n\t\t\t<Form.Field>\n      \t<label>Programme</label>\n      \t<input\n        \ttype='text'\n        \tonChange={handleProgrammeChange}\n        \trequired />\n      </Form.Field>\n\t\t\t<Form.Field>\n      \t<label>Result</label>\n      \t<input\n        \ttype='text'\n        \tonChange={handleResultChange}\n        \trequired />\n      </Form.Field>\n\t\t\t<Form.Field>\n      \t<label>Mode of study</label>\n      \t<input\n        \ttype='text'\n        \tonChange={handleModeOfStudyChange}\n        \trequired />\n      </Form.Field>\n\t\t\t<Button\n        type='submit'>\n        submit\n      </Button>\n    </Form>\n\t\t</>\n  )\n}\n\nexport default AddRecord;\n","import React, {useContext} from 'react';\nimport Context from '../store/Context';\nimport {Table, Button} from 'semantic-ui-react';\n\nconst GetInstitutions = () => {\n  const {state, dispatch} = useContext(Context);\n\n\tconst approve = async adr => {\n\t\ttry {\n\t\t\tdispatch({type: 'SET_LOADING', payload: true});\n\t\t\tawait state.contract.methods\n\t\t\t\t.approve(adr)\n\t\t\t\t.send({from: state.accounts[0]});\n\t\t} catch {\n\n\t\t} finally {\n\t\t\tdispatch({type: 'SET_LOADING', payload: false});\n\t\t}\n\t}\n\n\tconst disapprove = async adr => {\n\t\ttry {\n\t\t\tdispatch({type: 'SET_LOADING', payload: true});\n\t\t\tawait state.contract.methods\n\t\t\t\t.disapprove(adr)\n\t\t\t\t.send({from: state.accounts[0]});\n\t\t} catch {\n\n\t\t} finally {\n\t\t\tdispatch({type: 'SET_LOADING', payload: false});\n\t\t}\n\t}\n\n  return (\n    <Table>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Row>\n\t\t\t\t\t<Table.HeaderCell>Institution Name</Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell>Institution Address</Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell>Action</Table.HeaderCell>\n\t\t\t\t</Table.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n  \t\t{state.institutions.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Table.Cell>{item[2]}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>{item[1]}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t{item[3] &&\n\t\t\t\t\t\t\t<Button onClick={() => disapprove(item[1])}>\n\t\t\t\t\t\t\t\tDisapprove\n\t\t\t\t\t\t\t</Button>}\n\t\t\t\t\t\t\t{!item[3] &&\n\t\t\t\t\t\t\t<Button onClick={() => approve(item[1])}>\n\t\t\t\t\t\t\t\tApprove\n\t\t\t\t\t\t\t</Button>}\n\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t</Table.Body>\n    </Table>\n  )\n\n}\n\nexport default GetInstitutions;\n","import React, {useState, useContext} from 'react';\nimport Context from '../store/Context';\nimport {Form, Button} from 'semantic-ui-react';\nimport GetInstitutions from './GetInstitutions';\n\nconst Admin = () => {\n  const {state, dispatch} = useContext(Context);\n\n  const [institution, setInstitution] = useState()\n\tconst [name, setName] = useState();\n\n  const handleInstitutionChange = e => {\n    setInstitution(e.target.value);\n  }\n\n\tconst handleNameChange = e => {\n\t\tsetName(e.target.value);\n\t}\n\n  const handleSubmit = async e => {\n\t\te.preventDefault();\n    try {\n      dispatch({type: 'SET_LOADING', payload: true});\n      await state.contract.methods\n        .create(name, institution)\n        .send({from: state.accounts[0]});\n      dispatch({\n        type: 'SET_NOTIF',\n        payload: {msg: 'institution added.', success: true}\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_NOTIF',\n        payload: {msg: error.message, success: false}\n      });\n    } finally {\n      dispatch({type: 'SET_LOADING', payload: false});\n    }\n  }\n\n  return (\n    <>\n    <Form onSubmit={handleSubmit}>\n      <Form.Field>\n\t\t\t\t<label>Institution Name</label>\n      \t<input\n        \ttype='text'\n        \tonChange={handleNameChange}\n\t\t\t\t\tplaceholder='Institution Name'\n        \trequired />\n\t\t\t</Form.Field>\n      <Form.Field>\n\t\t\t\t<label>Institution</label>\n      \t<input\n        \ttype='text'\n        \tonChange={handleInstitutionChange}\n\t\t\t\t\tplaceholder='Institution Address'\n        \trequired />\n\t\t\t</Form.Field>\n\t\t\t<Button\n        type='submit'>\n        Submit\n      </Button>\n    </Form>\n\t\t<GetInstitutions />\n    </>\n  )\n}\n\nexport default Admin;\n","import React, {useContext} from 'react';\nimport Context from '../store/Context';\nimport {Table} from 'semantic-ui-react';\n\nconst GetRecords = () => {\n  const {state} = useContext(Context);\n\t\n  return (\n    <Table>\n\t\t\t<Table.Header>\n\t\t\t\t<Table.Row>\n\t\t\t\t\t<Table.HeaderCell>Sijil ID</Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell>Student Name</Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell>Date Issued</Table.HeaderCell>\n\t\t\t\t</Table.Row>\n\t\t\t</Table.Header>\n\t\t\t<Table.Body>\n  \t\t{state.records.filter(r => r[2] == state.accounts[0]).map(record => {\n\t\t\t\treturn (\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Table.Cell>{record[6]}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>{record[1]}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>{record[7]}</Table.Cell>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t</Table.Body>\n    </Table>\n  )\n\n}\n\nexport default GetRecords;\n","import React, {useContext} from 'react';\nimport {Menu} from 'semantic-ui-react';\nimport Context from '../store/Context';\nimport {Link} from 'react-router-dom';\n\nconst Header = () => {\n\tconst {state, dispatch} = useContext(Context);\n\n  const handleItemClick = val => dispatch({\n\t\ttype: 'SET_ACTIVE_ITEM',\n\t\tpayload: val\n\t});\n\n\treturn (\n\t\t<>\n\t\t<br/><br/>\n    <Menu secondary>\n      <Menu.Item>\n\t\t\t\t<h2>Sijil</h2>\n\t\t\t</Menu.Item>\n\t\t\t{(!state.isAdmin && state.isApproved) &&\n\t\t\t<>\n\t\t\t<Menu.Menu position='right'>\n        <Menu.Item\n          as={Link}\n\t\t\t\t\tto='/'\n\t\t\t\t\tname='HOME'\n\t\t\t\t\tactive={state.activeItem === ''}\n          onClick={() => handleItemClick('')}\n        />\n        <Menu.Item\n\t\t\t\t\tas={Link}\n\t\t\t\t\tto='/add'\n\t\t\t\t\tname='ISSUE PANEL'\n          active={state.activeItem === 'add'}\n          onClick={() => handleItemClick('add')}\n        />\n        <Menu.Item\n\t\t\t\t\tas={Link}\n\t\t\t\t\tto='/verify'\n\t\t\t\t\tname='VERIFY'\n          active={state.activeItem === 'verify'}\n          onClick={() => handleItemClick('verify')}\n        />\n      </Menu.Menu>\n    \t</>\n\t\t\t}\n\t\t</Menu>\n\t\t</>\n\t)\n}\n\nexport default Header;\n","\nimport React, {useContext} from 'react';\nimport Context from '../store/Context';\n\nconst RecordVerified = () => {\n  const {state} = useContext(Context);\n\n  if (state.recordVerified) {\n    if (!state.recordVerified.msg) {\n      return (\n        <p>\n          <div>Student Name : <b>{state.recordVerified[1]}</b></div>\n          <div>Student ID : <b>{state.recordVerified[0]}</b></div>\n          <div>Institution : <b>{state.recordVerified[8]}</b></div>\n          <div>Programme : <b>{state.recordVerified[3]}</b></div>\n          <div>Result : <b>{state.recordVerified[4]}</b></div>\n          <div>Mode of Study : <b>{state.recordVerified[5]}</b></div>\n          <div>Hash : <b>{state.recordVerified[6]}</b></div>\n          <div>Issuer Address : <b>{state.recordVerified[2]}</b></div>\n          <div>Date Issued : <b>{state.recordVerified[7]}</b></div>\n        </p>\n      )\n    } else {\n      return (\n        <p>\n          <div>{state.recordVerified.msg}</div>\n        </p>\n      )  \n    }\n  } else {\n    return <></>\n  }\n}\n\nexport default RecordVerified;","import React, {useRef, useState, useContext} from 'react';\nimport Context from '../store/Context';\nimport sha256 from 'crypto-js/sha256';\nimport {Form, Button} from 'semantic-ui-react';\nimport RecordVerified from './RecordVerified';\n\nconst Verify = () => {\n  const {state, dispatch} = useContext(Context);\n\tconst fileInputRef = useRef();\n  const [hash, setHash] = useState();\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsBinaryString(file);\n    reader.onloadend = () => {\n      setHash(sha256(reader.result).toString());\n    }\n\t\tdocument.getElementById('buttonChooseFile')\n\t\t\t.innerHTML = `<i aria-hidden=\"true\" class=\"file icon\"></i>${file.name}`;\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      dispatch({type: 'SET_LOADING', payload: true});\n\t\t\tconst record = await state.contract.methods\n        .getRecord(hash).call();\n\t\t\tif(record.hash) {\n\t\t\t\tconst index = await state.contract.methods\n\t\t\t\t\t.getInstitutionIndex(record.institution).call();\n\t\t\t\tconst institution = await state.contract.methods\n\t\t\t\t\t.institutions(index).call();\n\t\t\t\tconst data = [...record];\n\t\t\t\tdata.push(institution.name);\n\t\t\t\tdispatch({type: 'SET_RECORD_VERIFIED', payload: data});\n\t\t\t} else {\n\t\t\t\tdispatch({type: 'SET_RECORD_VERIFIED', payload: {msg: 'Unavailable to verify.'}});\n\t\t\t}\n      dispatch({\n        type: 'SET_NOTIF',\n        payload: {msg: 'record added.', success: true}\n      });\n\t\t\tconst records = await state.contract.methods\n\t\t\t\t.getRecords().call();\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_RECORDS',\n\t\t\t\tpayload: records\n\t\t\t});\n    } catch (error) {\n      dispatch({\n        type: 'SET_NOTIF',\n        payload: {msg: error.message, success: false}\n      });\n    } finally {\n      dispatch({type: 'SET_LOADING', payload: false});\n    }\n  }\n\n  return (\n\t\t<>\n    <Form onSubmit={handleSubmit}>\n      <Form.Field>\n\t\t\t\t<label>File</label>\n        <input\n\t\t\t\t\tref={fileInputRef}\n          type='file'\n          hidden\n          onChange={handleFileChange}\n\t\t\t\t\trequired\n        />\n      \t<Button\n\t\t\t\t\tid='buttonChooseFile'\n          content='Choose File'\n          labelPosition='left'\n          icon='file'\n          onClick={() => fileInputRef.current.click()}\n        />\n\t\t\t</Form.Field>\n\t\t\t<Button\n        type='submit'>\n        Submit\n      </Button>\n    </Form>\n\t\t<br/>\n\t\t<RecordVerified />\n\t\t</>\n  )\n}\n\nexport default Verify;\n","import React, {useEffect, useReducer} from 'react';\nimport GetWeb3 from './utils/GetWeb3';\nimport Reducer from './store/Reducer';\nimport InitialState from './store/InitialState';\nimport Context from './store/Context';\nimport AddRecord from './components/AddRecord';\nimport Sijil from './contracts/Sijil.json';\nimport Admin from './components/Admin';\nimport GetRecords from './components/GetRecords';\nimport {Container, Message} from 'semantic-ui-react';\nimport Header from './components/Header';\nimport Verify from './components/Verify';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  const [state, dispatch] = useReducer(Reducer, InitialState);\n\n  useEffect(() => {\n    const init = async () => {\n\t\t\t// get web3 instance\n      const web3 = await GetWeb3();\n\t\t\t\n\t\t\t// get accounts      \n\t\t\tconst accounts = await web3.eth.getAccounts();\n\n\t\t\t// get the contract instance from the blockchain\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Sijil.networks[networkId];      \n\t\t\tconst contract = new web3.eth.Contract(\n        Sijil.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\t\t\t\n\t\t\t// set the web3 instance to a global variable\n      dispatch({type: 'SET_WEB3', payload: web3});\n\n\t\t\t// set accounts to a global variable\n      dispatch({type: 'SET_ACCOUNTS', payload: accounts});\n      \n\t\t\t// set the contract instance to a global variable\n\t\t\tdispatch({type: 'SET_CONTRACT', payload: contract});\n\n\t\t\t// get admin (ministry) address\n\t\t\tcontract.methods.ministryOfEducation().call()\n\t\t\t\t.then(res => {\n\t\t\t\t\tlet isAdmin = res === accounts[0];\n\t\t\t\t\tdispatch({type: 'SET_IS_ADMIN', payload: isAdmin})\n\t\t\t\t});\n\n\t\t\t// isApproved\n\t\t\tcontract.methods.isApproved(accounts[0]).call()\n\t\t\t\t.then(res => dispatch({type: 'SET_IS_APPROVED', payload: res}));\n\n\t\t\t// get records\n\t\t\tcontract.methods.getRecords().call()\n\t\t\t\t.then(res => dispatch({type: 'SET_RECORDS', payload: res}));\n    \t\n\t\t\t// get institutions\n\t\t\tcontract.methods.getInstitutions().call()\n\t\t\t.then(res => dispatch({type: 'SET_INSTITUTIONS', payload: res}));\n\n\t\t\t// get current pathname\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_ACTIVE_ITEM',\n\t\t\t\tpayload: window.location.pathname.replace('/', '')\n\t\t\t});\n\t\t\n\t\t}\n\n\t\t// launch the init function\n    init();\n\n\t\t// if the account of metamask change, the accounts will be updated\n    window.ethereum.on('accountsChanged', accounts => {\n      dispatch({type: 'SET_ACCOUNTS', payload: accounts});\n    });\n  }, []);\n\n  if (state && !state.loading) {\n\t\treturn (\t\n\t\t\t<Context.Provider value={{state, dispatch}}>\n\t\t\t\t<Container>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/add'>\n\t\t\t\t\t\t\t<AddRecord />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path='/verify'>\n\t\t\t\t\t\t\t<Verify />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=''>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.isAdmin ?\n\t\t\t\t\t\t\t<Admin /> : !state.isApproved ? <Verify /> :\n\t\t\t\t\t\t\tstate.records.length > 0 ? \n\t\t\t\t\t\t\t\t<GetRecords /> : \n\t\t\t\t\t\t\t\t<Message visibel>No records.</Message>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t\t</Container>\n\t\t\t</Context.Provider>\n\t\t);\n\t} else {\n    return (\n      <Container>\n\t\t\t\t<br /><br />\n      \t<h2>Loading...</h2>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}